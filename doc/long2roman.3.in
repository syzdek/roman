.\"
.\" $Id$
.\"
.\" Roman Numeral Conversion API
.\" Copyright (C) 2007 David M. Syzdek <roman-project@syzdek.net>.
.\"
.\" Permission is granted to copy, distribute and/or modify this document
.\" under the terms of the GNU Free Documentation License, Version 1.2
.\" or any later version published by the Free Software Foundation;
.\" with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
.\" A copy of the license is included in the section entitled "GNU
.\" Free Documentation License".
.\"
.\" @configure_input@
.\"
.\" doc/long2roman.3.in - man page for Roman Numeral routines
.\"
.TH "ROMAN NUMERAL API" 3 "@RELEASE_MONTH@" "@PACKAGE_TARNAME@ @PACKAGE_VERSION@"
.SH NAME
long2roman, long2roman_r \- convert
.I signed int
to ASCII string containing the Roman Numeral value
.SH LIBRARY
Roman Numeral Conversion API (libroman, -lroman)
.SH SYNOPSIS
\fB#include <roman.h>\fR
.sp
\fIconst char *\fR
.br
\fBlong2roman\fR(\fIint num\fR);
.sp
\fIchar *\fR
.br
\fBlong2roman_r\fR(\fIint num\fR, \fIchar * buff\fR, \fIsize_t len\fR);
.SH DESCRIPTION
The function
.B long2roman
takes an argument of
.I num
and returns a pointer to a string containing the integer's Roman Numeral
representation of the integer's value.  Subsequent calls to
.B long2roman
will overwrite previous values.
.PP
The function
.B long2roman_r
provides the same functionality as
.B long2roman,
except that the caller must provide the out buffer
.I buff
to store the result.
.I buff
must be at least
.I len
characters long.
.SH RETURN VALUES
If successful, 
.B long2roman
and
.B long2roman_r
return a pointer to a string containing the Roman Numeral representation of the value of
.I num.
If there is an error, they will return a
.B NULL
pointer and set
.I errno
to indicate the error condition.
.SH ERRORS
.TP
.B EDOM
\fInum\fR is too large to be represented using this method.
.TP
.B EFAULT
bad address in \fIstr\fR
.TP
.B ENOBUFS
Insufficient storage space available in \fIstr\fR.
.SH EXAMPLES
\fB#include <stdio.h>\fR
.br
\fB#include <string.h>\fR
.br
\fB#include <roman.h>\fR
.sp
\fIint\fR \fBmain\fR(\fIint argc\fR, \fIchar * argv[]\fR);
.sp
\fIint\fR \fBmain\fR(\fIint argc\fR, \fIchar * argv[]\fR)
.br
{
.br
   \fIint          i\fR;
   \fIint          num\fR;
   \fIchar         buff[512]\fR;
   \fIconst char * ptr\fR;
.sp
   \fBfor\fR(\fIi\fR = 1; \fIi\fR < \fIargc\fR; \fIi\fR++)
.br
   {
.br
      \fInum\fR = \fBatol\fR(\fIargv\fR[\fIi\fR]);
.sp
      \fIptr\fR = \fBlong2roman\fR(\fInum\fR);
.br
      \fBif\fR(\fIptr\fR)
.br
         \fBprintf\fR("%i == %s\\n", \fInum\fR, \fIptr\fR);
.br
      \fBelse\fR
.br
         \fBperror\fR("long2roman_r()");
.sp
      \fIptr\fR = \fBlong2roman_r\fR(\fInum\fR, \fIbuff\fR, \fI512\fR);
.br
      \fBif\fR(\fIptr\fR)
.br
         \fBprintf\fR("%i == %s\\n", \fInum\fR, \fIptr\fR);
.br
      \fBelse\fR
.br
         \fBperror\fR("long2roman_r()");
.br
   }
.sp
   \fBreturn\fR(\fI0\fR);
.br
}
.SH REPORTING BUGS
Report bugs to <@PACKAGE_BUGREPORT@>.
.SH COPYRIGHT
@PACKAGE_COPYRIGHT@
.br
This is free software; see the source for copying conditions.  There is
NO warranty; not even for MERCHANTABILITY or FITNESS FOR  A  PARTICULAR
PURPOSE.
.SH SEE ALSO
.BR roman (7),
.BR romandate (1)
.BR romannum (1)
.BR roman2long (3)
.BR roman_ctime (3)
.BR roman_strftime (3)
.\" end of man page
